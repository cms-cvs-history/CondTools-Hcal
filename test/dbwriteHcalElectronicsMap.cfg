# to write hcal pedestals into orcon/orcoff/sqlite

process ProcessOne = 
{

  service = MessageLogger 
  {
     untracked vstring destinations = {"cout"}
     untracked PSet cout = 
     {
       untracked  PSet default = { untracked int32 limit = 0 }
     }
  }

  # Empty event source
  source = EmptyIOVSource 
  {
    string timetype = "runnumber"
    untracked uint32 firstRun = 1
    untracked uint32 lastRun = 1
    uint32 interval = 1
  }

//PopCon config
include "CondCore/DBCommon/data/CondDBCommon.cfi"

### Uncomment the appropriate:
## to write in sqlite local file (for testing):
  replace CondDBCommon.connect = "sqlite_file:DB.db"
#  replace CondDBCommon.DBParameters.authenticationPath="."

## to write into int2r_orcoff
#  replace CondDBCommon.connect = "oracle://cms_orcoff_int2r/CMS_COND_HCAL"
##  replace CondDBCommon.DBParameters.authenticationPath="/afs/cern.ch/user/r/rofierzy/DBauth/myorconreadonly"
##  replace CondDBCommon.DBParameters.authenticationPath="."    

## to write into orcon
# accounts since 17x:
#  replace CondDBCommon.connect = "oracle://orcon/CMS_COND_ON_170_HCAL"
#  replace CondDBCommon.DBParameters.authenticationPath="/afs/cern.ch/user/r/rofierzy/DBauth/myorconwrite"

### end Uncomment

# Database output service - where to put
  service = PoolDBOutputService 
            {
              using CondDBCommon
	      untracked string timetype="runnumber"
              VPSet toPut = 
              {{ 
                 string record = "HcalElectronicsMapRcd" 
                 string tag = "official_emap_v5_080208" 
              }}
	      untracked string logconnect = "sqlite_file:log.db"
            }

  module WriteInDB = HcalElectronicsMapPopConAnalyzer
  {
     string record = "HcalElectronicsMapRcd"
     untracked bool loggingOn = false
     bool SinceAppendMode = true
     PSet Source = { 
     	  	     untracked uint32 IOVRun = 10
		     untracked string CondFile = "CondFormats/HcalObjects/data/official_emap_v5_080208.txt"
	 	   }
  }

  path p = {WriteInDB}
}