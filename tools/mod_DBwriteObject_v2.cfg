# mod file to write a POOL-ORA conditions object into the database

process ProcessOne = 
{
  service = MessageLogger 
  {
     untracked vstring destinations = {"cout"}
     untracked PSet cout = 
     {
       untracked  PSet default = { untracked int32 limit = 0 }
     }
  }

  # Empty event source
  source = EmptyIOVSource 
  {
    string timetype = "runnumber"
    untracked uint32 firstRun = 1
    untracked uint32 lastRun = 1
    uint32 interval = 1
  }

//PopCon config
include "CondCore/DBCommon/data/CondDBCommon.cfi"

### Uncomment the appropriate:
## to write in sqlite local file (for testing):
#<SQLITE>  replace CondDBCommon.connect = "sqlite_file:DB.db"
#  replace CondDBCommon.DBParameters.authenticationPath="."

## to write into int2r_orcoff
#<ORCOFF>  replace CondDBCommon.connect = "oracle://cms_orcoff_int2r/CMS_COND_HCAL"
#  replace CondDBCommon.DBParameters.authenticationPath="~/DBauth/myorconreadonly"

## to write into orcon
# accounts since 20x:
#<ORCON>  replace CondDBCommon.connect = "oracle://orcon/CMS_COND_ON_200_HCAL"
#  replace CondDBCommon.DBParameters.authenticationPath="~/DBauth/myorconwrite"

### end Uncomment

### What to put:
  es_source es_ascii = HcalTextCalibrations
              {
                VPSet input = 
                {{
                   string object = "<Object>"
                   FileInPath file = "<PutFilename>"
		 }}
              }
  es_prefer es_ascii = HcalTextCalibrations{}

# Database output service - where to put
  service = PoolDBOutputService 
            {
              using CondDBCommon
	      untracked string timetype="runnumber"
              VPSet toPut = 
              {{ 
                 string record = "Hcal<Object>Rcd" 
                 string tag = "<PutTag>" 
              }}
#<SQLITE>	      untracked string logconnect = "sqlite_file:log.db"
#<ORCOFF>	      untracked string logconnect = "oracle://cms_orcoff_int2r/CMS_COND_GENERAL"
#<ORCON>	      untracked string logconnect = "oracle://cms_orcoff_int2r/CMS_COND_GENERAL"
            }

  module WriteInDB = Hcal<Object>PopConAnalyzer
  {
     string record = "Hcal<Object>Rcd"
     untracked bool loggingOn = true
#<SINCE>    bool SinceAppendMode = true   # set to true when it should use sinceTime, false - uses tillTime
#<TILL>    bool SinceAppendMode = false   # set to true when it should use sinceTime, false - uses tillTime
     PSet Source = { 
     	  	     untracked uint32 IOVRun = <IOVTime>
	 	   }
  }

  path p = {WriteInDB}
}